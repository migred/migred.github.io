[{"name":"app.R","content":"#\r\n# This is a Shiny web application. You can run the application by clicking\r\n# the 'Run App' button above.\r\n#\r\n# Find out more about building applications with Shiny here:\r\n#\r\n#    https://shiny.posit.co/\r\n#\r\n## Interface libraries\r\nlibrary(shiny)\r\nlibrary(bslib)\r\nlibrary(DT)\r\n## Server libraries\r\nlibrary(readxl)\r\nlibrary(writexl)\r\nlibrary(ggplot2)\r\n\r\n\r\n# Defining empty dataframes for tabs\r\noniondf<-data.frame(Tubos=numeric(), \"Concentración moles/L\"=numeric(), \"Potencial osmótico (MPa)\"=numeric(), \"Porc. plasmólisis\"=numeric())\r\nauxmaizdf<-data.frame(Tratamiento=factor(), \"Media longitud (mm)\"=numeric(), \"Porc. Variación\"=numeric())\r\nui <- fluidPage(\r\n  \r\n  # Application title\r\n  titlePanel(\"Cuaderno interactivo de prácticas de Fisiología Vegetal\"),\r\n  sidebarLayout(\r\n    sidebarPanel(\r\n      fileInput(\"studentfile\", \"Escoge tu archivo excel\"),\r\n      actionButton(\"load\", \"Cargar archivo\"),\r\n      width=2 # 2/12 of the page width\r\n    ),\r\n    mainPanel(\r\n      tabsetPanel(\r\n        # Práctica 1\r\n        tabPanel(\"Práctica 1\", \r\n                 #two horizontal cards in the first tab, one for cebolla and the other for patata\r\n                 #first card for onion\r\n                 card(min_height = \"400px\",\r\n                      card_header(\"Potencial osmótico cebolla\"),\r\n                      card_body(\r\n                        layout_columns(\r\n                          card( DTOutput('onionstudentsout')), \r\n                          # a card for a ggplot\r\n                          card(\r\n                            card_header(\"Gráfico de plasmólisis\"),\r\n                            card_body(\r\n                              plotOutput(\"onionplot\")\r\n                            ), \r\n                          )                         \r\n                        ),\r\n                        card (DTOutput('onionscorrect'))\r\n                      ),\r\n                 ),\r\n                 #second card for potato\r\n                 card(min_height = \"400px\",\r\n                      card_header(\"Potencial osmótico patata\"),\r\n                      card_body(\r\n                        layout_columns(\r\n                          card( DTOutput('potatostudentsout')), \r\n                          # a card for a ggplot\r\n                          card(\r\n                            card_header(\"Variación de peso de patata\"),\r\n                            card_body(\r\n                              plotOutput(\"potatoplot\")\r\n                            ),\r\n                          ),\r\n                          card( DTOutput('potatocorrect'))\r\n                        )\r\n                      ),\r\n                 )\r\n        ), # end of tabPanel 1\r\n        # Práctica 2\r\n        tabPanel(\"Práctica 2\", \r\n                 #two horizontal cards in the second tab, one for corn and the other for pea\r\n                 #first card for corn\r\n                 card(min_height = \"400px\",\r\n                      card_header(\"Efecto del tratamiento con Auxina en coleóptilos de maíz\"),\r\n                      card_body(\r\n                        layout_columns(\r\n                          card( DTOutput('cornstudentsout')), \r\n                          # a card for a ggplot\r\n                          card(\r\n                            card_header(\"Variación de la longitud del coleóptilo\"),\r\n                            card_body(\r\n                              plotOutput(\"corncoleoptilplot\")\r\n                            ),\r\n                          )\r\n                        ),\r\n                      ),\r\n                 ),\r\n                 #second card for pea\r\n                 card (min_height= \"400px\",\r\n                       card_header(\"Influencia del Estrés Salino en la Germinación de semillas de guisante\"),\r\n                       card_body(\r\n                         card( DTOutput('peastudentsout')), \r\n                         #a card for two different plots ggplot\r\n                         card(\r\n                           layout_columns(\r\n                             card(card_header(\"Porcentaje de germinación\"),\r\n                                  card_body(\r\n                                    plotOutput(\"peagerminationplot\")\r\n                                  ),\r\n                             ),\r\n                             card(card_header(\"Porcentaje de Variación de Peso\"),\r\n                                  card_body(\r\n                                    plotOutput(\"peaweightplot\")\r\n                                  ),\r\n                             )\r\n                           )\r\n                         ),\r\n                       )\r\n                 ),\r\n        ), ## end of tabPanel 2\r\n      ) ## end of tabsetPanel\r\n    ) ## end of mainPanel\r\n  ) ## end of sidebarLayout\r\n) ## end of fluidPage\r\n\r\nserver <- function(input, output) {\r\n  \r\n  observeEvent(input$load, {\r\n    req(input$studentfile)\r\n    # Práctica 1\r\n    \r\n    #Read the range B6:E12 from Practica 1 sheet and add rows to oniondf using read_excel\r\n\r\n    onionfile <- read_excel(input$studentfile$datapath, sheet = \"Practica 1\", range = \"B7:E12\", col_names=FALSE)\r\n    #join oniondf dataframe with onionfile tibble in a dataframe keeping oniondf colnames\r\n    \r\n    oniondf<-rbind(oniondf, onionfile)\r\n    colnames(oniondf)<-c(\"Tubos\", \"Concentración moles/L\", \"Potencial osmótico (MPa)\", \"Porc. plasmólisis\")\r\n    print(oniondf)\r\n    output$onionstudentsout<-renderDT({\r\n      datatable(oniondf)\r\n    })\r\n    \r\n    \r\n    #render the table onionscorrect with the proper values for Potencial osmótico corregido and Error columns.\r\n    oniondef<-oniondf\r\n    oniondef$`Potencial osmótico corregido (MPa)` <- round(-oniondef$`Concentración moles/L` * 0.008314 * 295,2)\r\n    oniondef$Error <- ifelse(oniondef$`Potencial osmótico (MPa)` / oniondef$`Potencial osmótico corregido (MPa)` > 0.9, \"Correcto\", \"Incorrecto\")\r\n    output$onionscorrect<-renderDT({\r\n      datatable(oniondef)\r\n    })\r\n    # Fit the logistic curve to your data (with only scal as a parameter)\r\n    model <- nls(`Porc. plasmólisis` ~ 100 / (1 + exp(-(`Potencial osmótico (MPa)` - xmid) * scal)), \r\n                 data = oniondf, start=list(xmid=0, scal=1))\r\n    \r\n    # a line scatter plot with y= Porc. plasmólisis and x= Potencial osmótico (MPa) to be rendered in onion plot and add a curve with a fit to a inversed sigmoid curve. Add a horizontal line for y=50 and a vertical line for x when y=50 in the  sigmoid function\r\n    output$onionplot<-renderPlot({\r\n      ggplot(oniondf, aes(x=`Potencial osmótico (MPa)`, y=`Porc. plasmólisis`)) +\r\n        geom_point() +\r\n        stat_function(fun = function(x) 100 / (1 + exp(-(x - coef(model)[\"xmid\"]) * coef(model)[\"scal\"])), \r\n                      geom=\"line\", color=\"blue\") +\r\n        geom_hline(yintercept=50, linetype=\"dashed\")+\r\n        geom_vline(xintercept = (log((100 - 50) / 50) / coef(model)[\"scal\"]) + coef(model)[\"xmid\"],\r\n                   linetype=\"dotted\") +\r\n        labs(x = \"Potencial osmótico de cebolla (MPa)\", subtitle = paste0(\"El Potencial osmótico tiene un valor aproximado de \", round((log((100 - 50) / 50) / coef(model)[\"scal\"]) + coef(model)[\"xmid\"], 2), \" MPa\"))\r\n    })\r\n    \r\n    # Potato analysis\r\n    potatofile <- read_excel(input$studentfile$datapath, sheet = \"Practica 1\", range = \"B30:G35\", col_names=FALSE)\r\n    potatodf<-data.frame(Tubos=numeric(), \"Concentración moles/L\"=numeric(), \"Potencial hídrico (MPa)\"=numeric(), \"Peso inicial (g)\"=numeric(), \"Peso final (g)\"=numeric(), \"Porc. Variación de Peso\"= numeric())\r\n    potatodf<-rbind(potatodf, potatofile)\r\n    colnames(potatodf)<-c(\"Tubos\", \"Concentración moles/L\", \"Potencial hídrico (MPa)\", \"Peso inicial (g)\", \"Peso final (g)\", \"Porc. Variación de Peso\")\r\n    output$potatostudentsout<-renderDT({\r\n      datatable(potatodf)\r\n    })\r\n    # a linnear model with x as Potencial hídrico (Mpa) and y as Porc. Variación de Peso. Stimate the value of Potencial hídrico when Porc. Variación de Peso is 0\r\n    modellm <- lm(`Porc. Variación de Peso` ~ `Potencial hídrico (MPa)`, data = potatodf)\r\n    hydricpot <- round(-coef(model)[1] / coef(model)[2],2)\r\n    n<-length(potatodf$`Potencial hídrico (MPa)`)\r\n    sum_x<-sum(potatodf$`Potencial hídrico (MPa)`)\r\n    sum_y<-sum(potatodf$`Porc. Variación de Peso`)\r\n    sum_x_y<-sum(potatodf$`Potencial hídrico (MPa)`*potatodf$`Porc. Variación de Peso`)\r\n    sum_x2<-sum(potatodf$`Potencial hídrico (MPa)`^2)\r\n    \r\n    pendiente<-((n*sum_x_y)-(sum_x*sum_y))/((n*sum_x2)-(sum_x^2))\r\n    intercepto<-(sum_y-(pendiente*sum_x))/n\r\n    \r\n    hydricpot<-round(-intercepto/pendiente,2)\r\n\r\n    \r\n    output$potatoplot<-renderPlot({\r\n      ggplot(potatodf, aes(x=`Potencial hídrico (MPa)`, y=`Porc. Variación de Peso`)) +\r\n        geom_point() +\r\n        labs(x = \"Potencial hídrico (Mpa)\", \r\n             y = \"Porcentaje de variación de peso de patata\",\r\n             subtitle= paste(\"Potencial hídrico de la patata es\", hydricpot, \"MPa\")) +\r\n        # Agregar una línea de tendencia por mínimos cuadrados\r\n        #geom_smooth(method = \"lm\", se = FALSE) +\r\n        geom_abline(intercept = intercepto, slope = pendiente, color=\"blue\") +\r\n        geom_hline(yintercept=0, linetype=\"dashed\") +\r\n        geom_vline(xintercept = hydricpot, linetype=\"dotted\")\r\n      })\r\n    \r\n    # Práctica 2\r\n    #Read the range B9:F11 from Practica 2 sheet and add rows to auxmaizdf using read_excel\r\n    auxmaizfile <- read_excel(input$studentfile$datapath, sheet = \"Practica 2\", range = \"B9:F11\", col_names=TRUE)\r\n    maizdf<-rbind(auxmaizdf, t(auxmaizfile))\r\n    colnames(maizdf)<- maizdf[1,]\r\n    print(maizdf)\r\n    #move rownames to first column\r\n    maizdf$`Tratamiento`<-rownames(maizdf)\r\n    rownames(maizdf)<-NULL\r\n    maizdf <- maizdf |> dplyr::select('Tratamiento', everything())\r\n    #remove first row\r\n    maizdf<-maizdf[-1,]\r\n    maizdf$'Variación(%) Corr'<- round((as.numeric(maizdf$'Media longitud (mm)')-10)/10*100,2)\r\n    maizdf$Error <- ifelse(as.numeric(maizdf$'Variación(%)') / maizdf$'Variación(%) Corr' > 0.9 | \r\n                             as.numeric(maizdf$'Variación(%)') / maizdf$'Variación(%) Corr' < 1.2 ,\r\n                           \"Correcto\", \"Incorrecto\")\r\n    output$cornstudentsout<-renderDT({\r\n      datatable(maizdf)\r\n    })\r\n    # a grouped bar plot with s as Tratamiento and y as Variación(%) Corr and Variación(%)\r\n    output$corncoleoptilplot<-renderPlot({\r\n      ggplot(maizdf, aes(x=Tratamiento, y=`Variación(%) Corr`, fill=Tratamiento)) +\r\n        geom_bar(stat=\"identity\", position=position_dodge()) +\r\n        geom_text(aes(label=`Variación(%) Corr`), vjust=-0.5, position=position_dodge(width=0.9)) +\r\n        labs(x = \"Tratamiento\", y = \"Variación(%) Corr\") +\r\n        theme(legend.position = \"none\")\r\n    })\r\n    #Read the range H9:K14 from Practica 2 sheet and add rows to saltpeadf using read_excel\r\n    auxsaltpfile <- read_excel(input$studentfile$datapath, sheet = \"Practica 2\", range = \"H8:K14\", col_names=TRUE)\r\n    saltpeadf<- as.data.frame(t(auxsaltpfile[,-1]))\r\n    colnames(saltpeadf)<- auxsaltpfile$`Tratamientos\\r\\n[NaCl] final`\r\n    saltpeadf$'Variación(%) Corr'<- round((saltpeadf$'Peso húmedo (g)'-saltpeadf$'Peso seco (g)')/saltpeadf$'Peso seco (g)'*100,2)\r\n    saltpeadf$Error <- ifelse(as.numeric(saltpeadf$'% Variación peso') / saltpeadf$'Variación(%) Corr' > 0.9 | \r\n                             as.numeric(saltpeadf$'% Variación peso') / saltpeadf$'Variación(%) Corr' < 1.2 ,\r\n                           \"Correcto\", \"Incorrecto\")\r\n    saltpeadef<-t(saltpeadf)\r\n    print(saltpeadf)\r\n    print(saltpeadef)\r\n    output$peastudentsout<-renderDT({\r\n      datatable(saltpeadef)\r\n    })\r\n  }\r\n  )\r\n}\r\n# Run the application \r\nshinyApp(ui = ui, server = server)\r\n","type":"text"}]
